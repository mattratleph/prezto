#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# zsh settings
source /usr/local/share/chruby/chruby.sh
source /usr/local/share/chruby/auto.sh
export EDITOR="vim"
export PATH="/usr/local/bin:/bin:/usr/sbin:/usr/bin:/sbin:/usr/X11/bin:/usr/local/sbin"
export PATH="/usr/local/heroku/bin:$PATH"
export PATH="/usr/local/git/bin:$PATH"

# functions
function current_branch() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo ${ref#refs/heads/}
}

function gpge() {
  gpg -s -e -r $3 -o $2 $1
}

function gpgd() {
  gpg -d -o $2 $1
}

# aliases
eval "$(hub alias -s)"

alias ~="cd ~" # go to home folder
alias code="cd ~/Code" # go to code folder
alias sites="cd ~/Sites" # go to sites folder
alias work="cd ~/Crossway" # go to sites folder

alias ls="ls -AG" # list all files and folders
alias lsl="ls -AGl" # list all files and folders with permissions
alias c="clear" # clear the display
alias s="exec $SHELL" # reload shell
alias flushdns="sudo killall -HUP mDNSResponder"

alias show="defaults write com.apple.finder AppleShowAllFiles YES && killall Finder /System/Library/CoreServices/Finder.app" # show all hidden files in Finder
alias hide="defaults write com.apple.Finder AppleShowAllFiles NO && killall Finder /System/Library/CoreServices/Finder.app" # hide all hideen files in Finder

alias iphone="open /Applications/Xcode.app/Contents/Developer/Applications/iOS\ Simulator.app" # open iPhone Simulator
alias android="~/Code/android/sdk/tools/emulator -avd Nexus-7-4.2 &"

alias gitc="vim ~/.gitconfig" # edit git config in vim
alias giti="vim ~/.gitignore_global" # edit global git ignore in vim
alias vimc="vim ~/.vimrc" # edit vim config in vim
alias vimt="vim ~/.vim/colors/solarized.vim" # edit vim theme in vim
alias zshc="vim ~/.zshrc" # edit zsh config in vim
alias installc="vim ~/Code/private/install.sh" # edit install.sh script in vim
alias hostc="sudo vim /etc/hosts" # edit hosts file in vim

alias gi="git init" # initializes a directory as a git repository
alias gl="git log --decorate --graph" # show commit history of a branch
alias glo="git log --decorate --graph --oneline" # show commit history of a branch on one line
alias gls="git log --decorate --graph --since '1 day ago' --no-merges --author 'Matt Ratleph'" # show commit history of a branch for yesterday
alias gs="git status -sb" # view the status of your files in the working directory and staging area
alias gd="git diff --ignore-space-at-eol -b -w --ignore-blank-lines" # show diff of all staged or unstaged changes
alias gt="git tag -a" # tag a point in history as important
alias ga="git add --all" # adds file contents to the staging area
alias grm="git rm" # remove files from the staging area
alias gc="git commit" # records a snapshot of the staging area
alias gca="git commit -a" # automatically stage all tracked, modified files before the commit
alias gcp="git cherry-pick" # cherry-pick a specific commit
alias gu="git reset HEAD --" # unstage changes that you have staged
alias grh="git reset --hard" # restore back to HEAD commit
alias gb="git branch --all" # list your available branches
alias gbn="git branch --no-merged" # list branches not merged into current branch
alias gbd="git branch -D" # delete a local branch
alias gco="git checkout" # switch to a branch
alias gcl="git clone" # copy a git repository so you can add to it
alias gr="git remote -v" # list your remote aliases
alias gfo="git fetch --prune origin" # download new branches and data from origin
alias gfu="git fetch --prune upstream" # download new branches and data from upstream
alias gm="git merge" # merge into current branch
alias gpo="git push origin $(current_branch)" # push your new data to origin
alias gpso="git push --set-upstream origin $(current_branch)" # push your new data to origin
alias gpu="git push upstream $(current_branch)" # push your new data to upstream
alias gpsu="git push --set-upstream upstream $(current_branch)" # push your new data to upstream
alias gpr="git pull-request" # open a pull request for the topic branch you just pushed
alias gbr="git browse" # open the Github link for the repo in your default browser

alias hc="heroku create" # create the app on the Cedar stack on Heroku
alias hp="heroku ps" # check the state of the app's processes on Heroku
alias hl="heroku logs" # review the Heroku logs for more information

alias dodl="doctl compute droplet list" # list DigitalOcean droplets
alias dossh="doctl compute ssh" # ssh to named DigitalOcean droplet

alias rn="rails new" # create a new rails app
alias rs="rails server" # start the rails server
alias rc="rails console" # start the rails console
alias rl="tail -f log/development.log" # tail the rails log file
alias rg="rails generate" # generate generically in rails
alias rgs="rails generate scaffold" # generate a scaffold in rails
alias rgc="rails generate controller" # generate a controller in rails
alias rgmo="rails generate model" # generate a model in rails
alias rgmi="rails generate migration" # generate a migration in rails
alias rdbm="rake db:migrate" # migrate the rails database using rake
alias bi="bundle install" # install gems using bundle

# Update system and code
function update {
  # prezto
  echo "\033[34mUpdating Prezto"
  tput sgr0
  cd ~/.zprezto
  git pull upstream master && git submodule update --init --recursive
  # homebrew
  echo "\033[34mUpdating Homebrew"
  tput sgr0
  brew update
  brew upgrade
  brew cleanup
  # ruby-gems
  echo "\033[34mUpdating RubyGems"
  tput sgr0
  gem update --system
  gem update
  gem cleanup
  # heroku
  echo "\033[34mUpdating Heroku"
  tput sgr0
  heroku update
  # vim
  echo "\033[34mUpdating Vim"
  tput sgr0
  cd ~/.vim/bundle/syntastic
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-airline
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-airline-themes
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-bufferline
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-bundler
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-coffee-script
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-colors-solarized
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-commentary
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-dispatch
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-fugitive
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-haml
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-heroku
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-markdown
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-mustache-handlebars
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-pathogen
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-rails
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-rhubarb
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ../vim-vinegar
  git fetch origin
  git merge --no-ff -m "Merging remote changes into local branch." origin/master
  cd ~
  exec $SHELL
}
